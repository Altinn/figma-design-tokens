name: Release
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "The type of release (one of 'patch', 'minor', or 'major')"
        required: true
        type: string
  push:
    tags:
      - "v*.*.*"

jobs:
  build_release:
    name: Build & release
    runs-on: ubuntu-20.04
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          registry-url: "https://npm.pkg.github.com"

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build
        run: yarn run build

      - name: Debug event
        env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
        run: |
          echo $EVENT_CONTEXT

      - name: Prepare release version
        if: github.event.inputs.release_type == 'patch'
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          yarn release ${{ github.event.inputs.release_type }}
          echo "release_version=`git describe`" >> $GITHUB_ENV
          git describe
          git status
          git push --follow-tags

      - name: Get release version
        if: github.event.inputs.release_type != 'patch'
        run: |
          echo "release_version=${{ github.ref }}" >> $GITHUB_ENV

      - name: Publish npm package
        run: yarn npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release_version }}
          release_name: Release ${{ env.release_version }}
          draft: false
          prerelease: false
